name: Check Build and Test

# on push or pull request to all branches excluding master
on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches-ignore:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instances: [ [ 1, 1 ], [ 4, 4 ] ]
      fail-fast: true
      max-parallel: 1

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Docker
        run: |
          sudo service docker start

      - name: Setup adr?
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz
          sudo apt-get install -y python3-pip

      - name: Make scripts executable
        run: |
          chmod +x ./prepareAll.sh
          chmod +x ./scripts/test.sh
          chmod +x ./scripts/dump-master-database.sh

      - name: Build and Run Services
        run: ./prepareAll.sh ${{ matrix.instances[0] }} ${{ matrix.instances[1] }} --non-interactive

      - name: Wait for Services Health
        run: |
          function wait_on_health() {
              local url=$1
              local service_name=$2
              local timeout=$3
              local start_time=$(date +%s)

              echo "Waiting for $service_name to start..."
              until [ "$(curl --silent "$url"/actuator/health | grep UP -c)" == 1 ]; do
                  current_time=$(date +%s)
                  if [ $((current_time - start_time)) -ge $timeout ]; then
                      echo "Timeout waiting for $service_name at $url"
                      exit 1
                  fi
                  echo "Service $service_name is not connected yet at $url"
                  sleep 3
              done
              echo "Service $service_name is up and running at $url"
          }

          # Set a timeout, for example, 60 seconds
          TIMEOUT=60
          
          echo "Waiting for services to start..."
          wait_on_health "http://localhost:80/actuator/health" "Terminal Transaction Service" $TIMEOUT
          echo "Terminal Transaction Service is up and running at http://localhost:80/actuator/health"
          wait_on_health "http://localhost:81/actuator/health" "Web Transaction Service" $TIMEOUT
          echo "Web Transaction Service is up and running at http://localhost:81/actuator/health"



      - name: Run Tests
        run: ./scripts/test.sh

      - name: Dump database
        run: ./scripts/dump-master-database.sh

      - name: Check Database Dump
        run: |
          echo "-> Checking database dump"
          if [ ! -s ../sql/test_data.sql ]; then
            echo "The file test_data.sql is empty, aborting..."
            exit 1
          fi
          echo "-> Database dump successful"

      - name: Cleanup Docker Environment
        if: always()
        run: |
          docker-compose down -v
          docker system prune -af
