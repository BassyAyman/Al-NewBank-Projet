name: Check Build and Test

# on push or pull request to all branches excluding master
on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instances: [ [ 1, 1 ] ] # [ [ 1, 1 ], [ 4, 4 ] ]
      fail-fast: true
      max-parallel: 1

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up Docker
        run: |
          sudo service docker start

      - name: Docker cleanup (if needed)
        run: |
          if [ -n "$(docker ps -aq)" ]; then
            echo "Cleaning up docker"
            docker stop $(docker ps -aq)
            printf "%s docker containers stopped\n" $(docker ps -aq | wc -l)
            docker rm $(docker ps -aq)
          else
            echo "No docker containers to clean up"
          fi

      - name: Make scripts executable
        run: |
          chmod +x ./prepareAll.sh
          chmod +x ./scripts/test.sh
          chmod +x ./scripts/dump-master-database.sh
          chmod +x ./scripts/generate-credit-cards.sh

      - name: Build and Run Services
        run: ./prepareAll.sh ${{ matrix.instances[0] }} ${{ matrix.instances[1] }} --non-interactive

      - name: DEBUG
        run: |
          echo "docker ps"
          docker-compose ps
          echo "docker logs"
          docker-compose logs
          echo "docker network ls"
          docker network ls

      - name: Check Actuator Health
        run: |
          echo "Checking actuator health"
          retry_count=0
          max_retries=20
          while [ $retry_count -lt $max_retries ]; do
            response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:80/actuator/health)
            if [ "$response" == "200" ]; then
              echo "Actuator health check passed"
              break
            else
              echo "Actuator health check failed with HTTP status: $response"
              retry_count=$((retry_count+1))
              echo "Retrying in 10 seconds... Attempt $retry_count of $max_retries"
              sleep 10
            fi
          done
          if [ $retry_count -eq $max_retries ]; then
            echo "Actuator health check failed after $max_retries attempts."
            exit 1
          fi
        shell: bash
        env:
          JAVA_HOME: /opt/hostedtoolcache/Java_Adopt_jdk/17.0.9-9/x64

          
      - name: Run Tests
        shell: bash
        run: ./scripts/test.sh

      - name: Dump database
        shell: bash
        run: ./scripts/dump-master-database.sh

      - name: Check Database Dump
        run: |
          echo "-> Checking database dump"
          if [ ! -s ../sql/test_data.sql ]; then
            echo "The file test_data.sql is empty, aborting..."
            exit 1
          fi
          echo "-> Database dump successful"

      - name: Cleanup Docker Environment
        if: always()
        run: |
          docker-compose down -v
          docker system prune -af
