events {
    worker_connections 10000;
}

http {
    upstream spring_app {
        server web-transaction-service-de:8080; # target service (internally dispached in n replicas)
        server web-transaction-service-fr:8080 backup;
    }

    server {
        listen 80; # port exposed to the host (to map in docker-compose.yml)

        location / {
            proxy_pass http://spring_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 2s;  # Temps d'attente pour la connexion
            proxy_read_timeout 5s;    # Temps d'attente pour la réponse
            proxy_send_timeout 5s;     # Temps d'attente pour l'envoi de la requête
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
    }
}
